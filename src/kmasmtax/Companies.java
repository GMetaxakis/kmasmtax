/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Companies.java
 *
 * Created on 25 Απρ 2010, 7:55:49 μμ
 */

package kmasmtax;

import java.util.List;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author MeTaXaS4
 */
public class Companies extends javax.swing.JFrame {

    /** Creates new form Companies */
    public Companies() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("taxBills").createEntityManager();
        companyQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Company c");
        companyList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : companyQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        companyTable = new javax.swing.JTable();
        nameField = new javax.swing.JTextField();
        afmField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        afmLabel = new javax.swing.JLabel();
        insertCompanyButton = new javax.swing.JButton();
        closeCompanies = new javax.swing.JButton();
        deleteCompanyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(kmasmtax.App.class).getContext().getResourceMap(Companies.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        companyTable.setName("companyTable"); // NOI18N
        companyTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, companyList, companyTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${companyPK.name}"));
        columnBinding.setColumnName("Company PK.name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${companyPK.afm}"));
        columnBinding.setColumnName("Company PK.afm");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(companyTable);
        companyTable.getColumnModel().getColumn(0).setResizable(false);
        companyTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("companyTable.columnModel.title0")); // NOI18N
        companyTable.getColumnModel().getColumn(1).setResizable(false);
        companyTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("companyTable.columnModel.title1")); // NOI18N

        nameField.setText(resourceMap.getString("nameField.text")); // NOI18N
        nameField.setName("nameField"); // NOI18N

        afmField.setText(resourceMap.getString("afmField.text")); // NOI18N
        afmField.setName("afmField"); // NOI18N

        nameLabel.setText(resourceMap.getString("nameLabel.text")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N

        afmLabel.setText(resourceMap.getString("afmLabel.text")); // NOI18N
        afmLabel.setName("afmLabel"); // NOI18N

        insertCompanyButton.setText(resourceMap.getString("insertCompanyButton.text")); // NOI18N
        insertCompanyButton.setName("insertCompanyButton"); // NOI18N
        insertCompanyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCompanyButtonActionPerformed(evt);
            }
        });

        closeCompanies.setText(resourceMap.getString("closeCompanies.text")); // NOI18N
        closeCompanies.setName("closeCompanies"); // NOI18N
        closeCompanies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeCompaniesActionPerformed(evt);
            }
        });

        deleteCompanyButton.setText(resourceMap.getString("deleteCompanyButton.text")); // NOI18N
        deleteCompanyButton.setName("deleteCompanyButton"); // NOI18N
        deleteCompanyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCompanyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(insertCompanyButton, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addGap(31, 31, 31)
                        .addComponent(deleteCompanyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(closeCompanies, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addGap(72, 72, 72))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(afmLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(afmField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addGap(128, 128, 128))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(afmLabel)
                    .addComponent(afmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertCompanyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(closeCompanies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteCompanyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertCompanyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCompanyButtonActionPerformed
        //if (Afm.afmIsValid(afmField.getText().toString()))
            insertCompany(nameField.getText().toString(),afmField.getText().toString());
        //else
            //dialog to say that afm is not valid
    }//GEN-LAST:event_insertCompanyButtonActionPerformed

    private void closeCompaniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeCompaniesActionPerformed
        dispose();
    }//GEN-LAST:event_closeCompaniesActionPerformed

    private void deleteCompanyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCompanyButtonActionPerformed
        deleteCompany();
    }//GEN-LAST:event_deleteCompanyButtonActionPerformed

    void insertCompany(String name,String afm){
        Company local=new Company(name, afm);
        boolean add=true;
        //companyList=companyQuery.getResultList();

        for(int i=0;i<companyList.size()-1;i++){
            CompanyPK localPK= companyList.get(i).getCompanyPK();
            if(localPK.getAfm().equalsIgnoreCase(afm) || localPK.getName().equalsIgnoreCase(name) ){
                add=false;
            }
        }
        if(add){
            entityManager.getTransaction().begin();
            entityManager.merge(local);
            companyList.add(local);
            entityManager.getTransaction().commit();
            update(local);
        }
        else{
            //kmasmtax.Dialog dialog=new taxgenerator.Dialog(this,"Iparxei idi");
            //dialog.setText("Iparxei idi afti i etairia i to afm p edwses");
            //dialog.setVisible(true);
       }
    }

    void deleteCompany(){
        List<Company> localList=companyList;
        Company localCompany = companyList.get(companyTable.getSelectedRow());
        try {
            entityManager.getTransaction().begin();
            if (companyTable.getSelectedRow()!=-1){
                entityManager.remove(localCompany);
                companyList.remove(companyTable.getSelectedRow());
             }
            companyTable.revalidate();
            companyTable.repaint();
            entityManager.getTransaction().commit();
        }
        catch (Exception e){
            companyTable.validate();
            update(localList,localCompany);
            //Dialog to say the follow message
            System.out.println("Αδύνατη Διαγραφή Εταιρίας Ίσως να χρησιμοποιείται ή μόλις εισάχθηκε");
        }
    }

    public void update(List<Company> localList,Company localCompany){
        Object [] ColumnNames={"Όνομα Εταιρίας","Α.Φ.Μ."};
        Object [] local2={localCompany.companyPK.getName(),localCompany.companyPK.getAfm()};
        DefaultTableModel tm = new DefaultTableModel(ColumnNames, companyTable.getRowCount());
        for (int i=0;i<companyTable.getRowCount();i++){
            Company rowDataCompany = localList.get(i);
            tm.setValueAt(rowDataCompany.companyPK.getName(),i,0);
            tm.setValueAt(rowDataCompany.companyPK.getAfm(),i,1);
        }
        tm.insertRow(companyTable.getRowCount(), local2);
        companyTable.setModel(tm);
    }

    public void update(Company insert){
        Object [] ColumnNames={"Όνομα Εταιρίας","Α.Φ.Μ."};
        Object [] local2={insert.companyPK.getName(),insert.companyPK.getAfm()};
        DefaultTableModel tm = new DefaultTableModel(ColumnNames, companyTable.getRowCount());
        for (int i=0;i<companyTable.getRowCount();i++){
            Company rowDataCompany = companyList.get(i);
            
            tm.setValueAt(rowDataCompany.companyPK.getName(),i,0);
            tm.setValueAt(rowDataCompany.companyPK.getAfm(),i,1);
        }
        tm.insertRow(companyTable.getRowCount(), local2);
        companyTable.setModel(tm);
    }
    

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Companies().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afmField;
    private javax.swing.JLabel afmLabel;
    private javax.swing.JButton closeCompanies;
    private java.util.List<kmasmtax.Company> companyList;
    private javax.persistence.Query companyQuery;
    private javax.swing.JTable companyTable;
    private javax.swing.JButton deleteCompanyButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton insertCompanyButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
