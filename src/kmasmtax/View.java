/*
 * View.java
 */

package kmasmtax;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class View extends FrameView {

    public View(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = App.getApplication().getMainFrame();
            aboutBox = new AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        App.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox();
        dateField = new javax.swing.JTextField();
        afmField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        amountFormattedTextField = new javax.swing.JFormattedTextField();
        athApodLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        billsTable = new javax.swing.JTable();
        eisodimaTextField = new javax.swing.JTextField();
        deleteCompanyButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        insertBillButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox();
        closeCompanies = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jdbc:derby:taxPU").createEntityManager();
        billsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM Bills b");
        billsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : billsQuery.getResultList();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(kmasmtax.App.class).getContext().getResourceMap(View.class);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        categoryComboBox.setModel(addAtComboBoxModel());
        categoryComboBox.setName("categoryComboBox"); // NOI18N

        dateField.setText(resourceMap.getString("dateField.text")); // NOI18N
        dateField.setEnabled(false);
        dateField.setName("dateField"); // NOI18N

        afmField.setName("afmField"); // NOI18N
        afmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afmFieldActionPerformed(evt);
            }
        });
        afmField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                afmFieldFocusLost(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        amountFormattedTextField.setName("amountFormattedTextField"); // NOI18N

        athApodLabel.setText(resourceMap.getString("athApodLabel.text")); // NOI18N
        athApodLabel.setName("athApodLabel"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        billsTable.setName("billsTable"); // NOI18N
        billsTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, billsList, billsTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${afm}"));
        columnBinding.setColumnName("Afm");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${amount}"));
        columnBinding.setColumnName("Amount");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${catname}"));
        columnBinding.setColumnName("Catname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${comname}"));
        columnBinding.setColumnName("Comname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(billsTable);
        billsTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("billsTable.columnModel.title0")); // NOI18N
        billsTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("billsTable.columnModel.title1")); // NOI18N
        billsTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("billsTable.columnModel.title2")); // NOI18N
        billsTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("billsTable.columnModel.title3")); // NOI18N
        billsTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("billsTable.columnModel.title4")); // NOI18N

        eisodimaTextField.setToolTipText(resourceMap.getString("eisodimaTextField.toolTipText")); // NOI18N
        eisodimaTextField.setName("eisodimaTextField"); // NOI18N

        deleteCompanyButton.setText(resourceMap.getString("deleteCompanyButton.text")); // NOI18N
        deleteCompanyButton.setName("deleteCompanyButton"); // NOI18N
        deleteCompanyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCompanyButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        nameField.setName("nameField"); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });

        insertBillButton.setText(resourceMap.getString("insertBillButton.text")); // NOI18N
        insertBillButton.setName("insertBillButton"); // NOI18N
        insertBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBillButtonActionPerformed(evt);
            }
        });

        jSeparator3.setName("jSeparator3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jSpinner1.setName("jSpinner1"); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", " " }));
        jComboBox1.setName("jComboBox1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(kmasmtax.App.class).getContext().getActionMap(View.class, this);
        closeCompanies.setAction(actionMap.get("quit")); // NOI18N
        closeCompanies.setText(resourceMap.getString("closeCompanies.text")); // NOI18N
        closeCompanies.setName("closeCompanies"); // NOI18N
        closeCompanies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeCompaniesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(630, Short.MAX_VALUE)
                .addComponent(closeCompanies)
                .addGap(43, 43, 43))
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(207, 207, 207)
                            .addComponent(jLabel5))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(4, 4, 4)
                            .addComponent(eisodimaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel8)
                                    .addGap(6, 6, 6)
                                    .addComponent(athApodLabel))
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addGap(96, 96, 96)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel4))
                            .addGap(10, 10, 10)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(90, 90, 90)
                                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)
                                    .addGap(10, 10, 10)
                                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(deleteCompanyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel2)
                                    .addGap(4, 4, 4)
                                    .addComponent(afmField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel3)
                                    .addGap(4, 4, 4)
                                    .addComponent(amountFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(insertBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(20, 20, 20)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(426, Short.MAX_VALUE)
                .addComponent(closeCompanies)
                .addGap(22, 22, 22))
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)
                    .addComponent(jLabel5)
                    .addGap(11, 11, 11)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel1))
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel2))
                        .addComponent(afmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel3))
                        .addComponent(amountFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertBillButton))
                    .addGap(8, 8, 8)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(deleteCompanyButton)))
                    .addGap(6, 6, 6)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(11, 11, 11)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel7))
                        .addComponent(eisodimaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel8))
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(athApodLabel)))
                    .addGap(62, 62, 62)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(50, Short.MAX_VALUE)))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 574, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void afmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afmFieldActionPerformed
        checkAfm();
}//GEN-LAST:event_afmFieldActionPerformed

    private void afmFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_afmFieldFocusLost
        checkAfm();
}//GEN-LAST:event_afmFieldFocusLost

    private void deleteCompanyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCompanyButtonActionPerformed

}//GEN-LAST:event_deleteCompanyButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        checkCompanyName();
}//GEN-LAST:event_nameFieldActionPerformed

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        checkCompanyName();
}//GEN-LAST:event_nameFieldFocusLost

    private void insertBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBillButtonActionPerformed
        insertBill();
}//GEN-LAST:event_insertBillButtonActionPerformed

    private void closeCompaniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeCompaniesActionPerformed

}//GEN-LAST:event_closeCompaniesActionPerformed

    void checkAfm(){
        String afm=afmField.getText().toString();
        if(Afm.afmIsValid(afm))
            nameField.setText(getCompanyName(afm));
        else
            System.out.println("Lathos AFM");
    }

    void checkCompanyName(){
        String name=nameField.getText().toString();
        afmField.setText(getCompanyAfm(name));
    }

    boolean stringIsNotNull(String s){
        return !s.isEmpty();
    }

    void insertBill(){
        if(stringIsNotNull(nameField.getText().toString())
           && stringIsNotNull(afmField.getText().toString())
           && stringIsNotNull(amountFormattedTextField.getText().toString())
           && stringIsNotNull(dateField.getText().toString())
           && stringIsNotNull(categoryComboBox.getItemAt(categoryComboBox.getSelectedIndex()).toString()) ){

            if (!afmExist(afmField.getText().toString()) ){
                Companies c=new Companies();
                c.insertCompany(nameField.getText().toString(), afmField.getText().toString());
            }//if company does not exist to insert it

            Bills b=new Bills(billsList.size()+1);
            b.setComname(nameField.getText().toString());
            b.setAfm(afmField.getText().toString());
            b.setUserid(App.UserLogedInID);
            b.setAmount(Integer.parseInt(amountFormattedTextField.getText().toString()));
            b.setDate(dateField.getText().toString());
            b.setCatname(categoryComboBox.getItemAt(categoryComboBox.getSelectedIndex()).toString());

            billsList=billsQuery.getResultList();
            entityManager.getTransaction().begin();
            entityManager.merge(b);
            billsList.add(b);
            entityManager.getTransaction().commit();
            update(b);
            System.out.println(categoryComboBox.getItemAt(categoryComboBox.getSelectedIndex()).toString());
            System.out.println(b.toString());
        }//if field is not null
        else
            System.out.println("Keno pedio");
    }

    void deleteBill(){
        List<Bills> localList=billsList;
        Bills localBill = billsList.get(billsTable.getSelectedRow());
        try {
            entityManager.getTransaction().begin();
            if (billsTable.getSelectedRow()!=-1){
                entityManager.remove(localBill);
                billsList.remove(billsTable.getSelectedRow());
             }
            billsTable.revalidate();
            billsTable.repaint();
            entityManager.getTransaction().commit();
        }
        catch (Exception e){
            //BillsTable.validate();
            //update(localList,localCompany);
            //Dialog to say the follow message
            //System.out.println("Αδύνατη Διαγραφή Εταιρίας Ίσως να χρησιμοποιείται ή μόλις εισάχθηκε");
        }
    }

    public void update(Bills insert){
        Object [] ColumnNames={"Όνομα Εταιρίας","Α.Φ.Μ.","Ποσό Απόδειξης","Ημερονηνία","Κατηγορία"};
        Object [] local2={insert.getComname(),insert.getAfm(),insert.getAmount(),insert.getDate(),insert.getCatname()};
        DefaultTableModel tm = new DefaultTableModel(ColumnNames, billsTable.getRowCount());
        for (int i=0;i<billsTable.getRowCount();i++){
            Bills rowDataBill = billsList.get(i);
            tm.setValueAt(rowDataBill.getComname(),i,0);
            tm.setValueAt(rowDataBill.getAfm(),i,1);
            tm.setValueAt(rowDataBill.getAmount(),i,2);
            tm.setValueAt(rowDataBill.getDate(),i,3);
            tm.setValueAt(rowDataBill.getCatname(),i,4);
        }

        tm.insertRow(billsTable.getRowCount(), local2);
        billsTable.setModel(tm);
    }

    private Object makeObj(final String item)  {
        return new Object() { public String toString() { return item; } };
    }

    boolean afmExist(String afm){
        boolean exist=false;
        Connection con = JDBCDriverInformation.getOracleJDBCConnection();
        Statement stmt;
        String selectString = "select * from company";
        String afmLocal=null;
        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(selectString);
            while (rs.next()){
                afmLocal=rs.getString("AFM");
                if(afmLocal.equalsIgnoreCase(afm))
                    exist=true;
            }
            con.close();
            stmt.close();
        }
        catch(SQLException ex) {
            System.err.println("SQLException: " + ex.getMessage());
	}
        finally{
            return exist;
        }
    }

    String getCompanyName(String afm){
        Connection con = JDBCDriverInformation.getOracleJDBCConnection();
        Statement stmt;
        String selectString = "select * from company";
        String name=null,nameLocal=null,afmLocal=null;
        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(selectString);
            while (rs.next()){
                nameLocal=rs.getString("Name");
                afmLocal=rs.getString("AFM");
                if(afmLocal.equalsIgnoreCase(afm)){
                    name=nameLocal;
                    break;
                }
            }
            con.close();
            stmt.close();
        }
        catch(SQLException ex) {
            System.err.println("SQLException: " + ex.getMessage());
	}
        finally{
            return name;
        }
    }

    String getCompanyAfm(String name){
        Connection con = JDBCDriverInformation.getOracleJDBCConnection();
        Statement stmt;
        String selectString = "select * from company";
        String nameLocal=null,afm=null,afmLocal=null;
        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(selectString);
            while (rs.next()){
                nameLocal=rs.getString("Name");
                afmLocal=rs.getString("AFM");
                if(nameLocal.equalsIgnoreCase(name)){
                    afm=afmLocal;
                    break;
                }
            }
            con.close();
            stmt.close();
        }
        catch(SQLException ex) {
            System.err.println("SQLException: " + ex.getMessage());
	}
        finally{
            return afm;
        }
    }

    ComboBoxModel addAtComboBoxModel(){
        Connection con = JDBCDriverInformation.getOracleJDBCConnection();
        Statement stmt;
        JComboBox local= new JComboBox();

        //local.addItem("");
        String selectString = "select * from category";
        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(selectString);
            while (rs.next()){
                    local.addItem(makeObj(rs.getString("Name")));
            }
            con.close();
            stmt.close();
        }
        catch(SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.exit(1);
	}
        return local.getModel();      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afmField;
    private javax.swing.JFormattedTextField amountFormattedTextField;
    private javax.swing.JLabel athApodLabel;
    private java.util.List<kmasmtax.Bills> billsList;
    private javax.persistence.Query billsQuery;
    private javax.swing.JTable billsTable;
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.JButton closeCompanies;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton deleteCompanyButton;
    private javax.swing.JTextField eisodimaTextField;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton insertBillButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField nameField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
